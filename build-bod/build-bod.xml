<?xml version="1.0" encoding="UTF-8"?>
<project default="release">
	<property name="build-bod-version" value="1.02"/>

	<property name="build-bod.dir" value="${basedir}"/>

	<property name="project.dir" location="${build-bod.dir}/.." />
	<property name="build-bod.properties" location="${project.dir}/build-bod.properties" />

	<property file="${project.dir}/local.properties" />
	<property file="${project.dir}/default.properties" />
	<property file="${build-bod.properties}" />

	<echo>============</echo>
	<echo>Releasing ${name} ${configuration} ${versionName}...</echo>
	<echo>============</echo>
	<echo>build-bod.xml v${build-bod-version}</echo>


	<!-- Tools -->
	<condition property="exe" value=".exe" else="">
		<os family="windows" />
	</condition>
	<condition property="bat" value=".bat" else="">
		<os family="windows" />
	</condition>
	<property name="verbose" value="false" />
	<property name="android.tools.dir" location="${sdk.dir}/tools" />
	<property name="zipalign" location="${android.tools.dir}/zipalign${exe}" />

	<tstamp>
		<format property="buildDate" pattern="yyyy-MM-dd" />
	</tstamp>

	<path id="android.antlibs">
		<pathelement path="${sdk.dir}/tools/lib/anttasks.jar" />
		<pathelement path="${sdk.dir}/tools/lib/sdklib.jar" />
		<pathelement path="${sdk.dir}/tools/lib/androidprefs.jar" />
		<pathelement path="${sdk.dir}/tools/lib/apkbuilder.jar" />
		<pathelement path="${sdk.dir}/tools/lib/jarutils.jar" />
	</path>

	<taskdef name="xpath" classname="com.android.ant.XPathTask" classpathref="android.antlibs" />

	<target name="prepare-configuration">
		<echo>Preparing configuration '${configuration}'...</echo>

		<echo>Copying common sources to build dir...</echo>
		<property name="build.dir" value="${project.dir}/../build" />
		<property name="build.absolute.dir" location="${build.dir}" />

		<delete dir="${build.absolute.dir}" quiet="true" />
		<mkdir dir="${build.absolute.dir}" />

		<!-- Binary files (don't do substitutions) -->
		<copy todir="${build.absolute.dir}">
			<fileset dir="${project.dir}">
				<include name="assets/**" />
				<include name="src/**" />
				<include name="res/**" />
				<include name="libs/**" />
				<include name="build.xml" />
				<include name="default.properties" />
				<include name="local.properties" />
			</fileset>
		</copy>

		<!-- Text files (with substitutions) -->
		<copy todir="${build.absolute.dir}" overwrite="yes">
			<fileset dir="${project.dir}">
				<include name="assets/**/*.xml" />
				<include name="assets/**/*.html" />
				<include name="src/**/*.java" />
				<include name="src/**/*.aidl" />
				<include name="res/**/*.xml" />
				<include name="res/**/*.html" />
				<include name="AndroidManifest.xml" />
			</fileset>
			<filterset filtersfile="${build-bod.properties}" begintoken="$${" endtoken="}">
				<filter token="buildDate" value="${buildDate}" />
			</filterset>
		</copy>


		<echo>Applying '${configuration}' configuration patches...</echo>
		<property name="config.dir" location="${project.dir}/config/${configuration}" />
		<!-- Binary files (don't do substitutions) -->
		<copy todir="${build.absolute.dir}" overwrite="true">
			<fileset dir="${config.dir}">
				<include name="assets/**" />
				<include name="src/**" />
				<include name="res/**" />
				<include name="libs/**" />
			</fileset>
		</copy>

		<!-- Text files (with substitutions) -->
		<copy todir="${build.absolute.dir}" overwrite="true">
			<fileset dir="${config.dir}">
				<include name="assets/**/*.xml" />
				<include name="assets/**/*.html" />
				<include name="src/**/*.java" />
				<include name="src/**/*.aidl" />
				<include name="res/**/*.xml" />
				<include name="res/**/*.csv" />
				<include name="AndroidManifest.xml" />
			</fileset>
			<filterset filtersfile="${build-bod.properties}" begintoken="$${" endtoken="}">
				<filter token="buildDate" value="${buildDate}" />
			</filterset>
		</copy>

		<xpath input="${project.dir}/AndroidManifest.xml" expression="/manifest/@package" output="original.manifest.package" />
		<xpath input="${build.absolute.dir}/AndroidManifest.xml" expression="/manifest/@package" output="config.manifest.package" />
		<echo>Updating R imports to package '${config.manifest.package}'...</echo>
		<replace dir="${build.absolute.dir}/src" token="import ${original.manifest.package}.R;" value="import ${config.manifest.package}.R;" summary="true">
			<include name="**/*.java" />
		</replace>
		<echo>Updating layout xml namespaces to '${config.manifest.package}'...</echo>
		<replace dir="${build.absolute.dir}/res/layout" token='="http://schemas.android.com/apk/res/${original.manifest.package}"' value='="http://schemas.android.com/apk/res/${config.manifest.package}"' summary="true">
			<include name="**/*.xml" />
		</replace>

		<echo>Configuration '${configuration}' is now prepared in ${build.absolute.dir}</echo>
	</target>



	<!-- This is macro which zipaligns in.package and outputs it to out.package. Used by targets
         debug, -debug-with-emma and release.-->
	<macrodef name="zipalign-helper">
		<attribute name="in.package" />
		<attribute name="out.package" />
		<sequential>
			<echo>Running zipalign on final apk...</echo>
			<exec executable="${zipalign}" failonerror="true">
				<arg value="-f" />
				<arg value="4" />
				<arg path="@{in.package}" />
				<arg path="@{out.package}" />
			</exec>
		</sequential>
	</macrodef>



	<target name="release" depends="prepare-configuration">
		<echo>Now building the resulting configuration...</echo>
		<!--<ant dir="${build.absolute.dir}" target="release" inheritall="false" />-->
		<exec executable="ant${bat}" dir="${build.absolute.dir}">
			<arg value="-file" />
			<arg value="build.xml" />
			<arg value="release" />
		</exec>

		<echo>Signing final apk...</echo>
		<signjar jar="${build.absolute.dir}/bin/project-unsigned.apk"
		         signedjar="${build.absolute.dir}/bin/project-signed.apk"
		         keystore="${key-store}"
		         storepass="${key-store-password}"
		         alias="${key-alias}"
		         keypass="${key-alias-password}"
		         verbose="${verbose}"
		/>

		<property name="apk" value="${build.absolute.dir}/bin/${name}_${versionCode}_${configuration}_signed.apk"/>

		<zipalign-helper in.package="${build.absolute.dir}/bin/project-signed.apk" out.package="${apk}" />

		<echo>Deploying to etc and to ${deploy-folder}...</echo>
		<copy file="${apk}" todir="${project.dir}/etc" />
		<copy file="${apk}" todir="${deploy-folder}" />

		<echo>============</echo>
		<echo>And Voila! ${name} ${configuration} ${versionName} is now cooked. Enjoy.</echo>
		<echo>============</echo>
		<echo>build-bod.xml v${build-bod-version}</echo>
	</target>
</project>
